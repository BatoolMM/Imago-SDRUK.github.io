name: Build docker image

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get current branch
        id: check_step
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "Branch is $branch."

      - name: Extract Version
        id: version
        run: |
          # Use release tag or fallback to package.json
          if [[ ${{ github.event_name }} == 'release' ]]; then
            VERSION="${{ github.event.release.tag_name }}"
          else
            VERSION=$(grep -oP '"version": "\K[^"]+' package.json)
          fi
          # Strip 'v' prefix if present
          CLEAN_VERSION=$(echo "$VERSION" | sed 's/^v//')
          echo "version=$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.sha }}
            type=raw,value=release,enable=${{ github.event_name == 'release' }}
            type=raw,value=${{ steps.version.outputs.version }},enable=${{ steps.check_step.outputs.branch == 'main' }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
